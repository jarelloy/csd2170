
#version 450

#define BLOCK_SIZE 16

layout (local_size_x = BLOCK_SIZE, local_size_y = BLOCK_SIZE) in;
layout (binding = 0, rgba8) uniform readonly image2D inputImage;
layout (binding = 1, rgba8) uniform image2D resultImage;

struct Histogram
{
  uint bin;
  float cdf;
};

layout(std430, binding = 2) buffer outHistogram
{
   Histogram histo[256];
};

const mat3 YuvMat = mat3 
(
   0.299, -0.169,  0.499,
   0.587, -0.331, -0.418,
   0.114,  0.499, -0.0813
);

const mat3 RgbMat = mat3
(
  1.0,    1.0,   1.0,
  0.0,   -0.344, 1.772,
  1.402, -0.714, 0.0
);

float ColorCorrection(float currentCDF, float minCDF)
{
  return clamp(255.0 * (currentCDF - minCDF) / (1.0 - minCDF), 0.0, 255.0);
}

void main()
{
  histo[gl_LocalInvocationIndex].bin = 0;
  float cdfMin = histo[0].cdf;

  vec3 pixel = imageLoad(inputImage, ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y)).rgb * 255.0;
  vec3 yuv = YuvMat * pixel;
  yuv.x = ColorCorrection(histo[int(yuv.x)].cdf, cdfMin);
  vec3 newRGB = clamp(RgbMat * yuv, 0.0, 255.0);

  imageStore(resultImage, ivec2(gl_GlobalInvocationID.x, gl_GlobalInvocationID.y),
    vec4(newRGB / 255.0, 1.0));
}